{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, \"Reaction Time: \" + _toDisplayString($options.formatReactionTime($props.reactionTime)) + \" seconds\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.restartGame && $options.restartGame(...args))\n  }, \"Play Again\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$options","formatReactionTime","$props","reactionTime","onClick","_cache","args","restartGame"],"sources":["C:\\Users\\Nikola\\Desktop\\Vue Reaction Game\\vue-reaction-game\\src\\components\\theResult.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Reaction Time: {{ formatReactionTime(reactionTime) }} seconds</h1>\r\n    <button @click=\"restartGame\">Play Again</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    reactionTime: Number,\r\n  },\r\n  methods: {\r\n    formatReactionTime(timeInMilliseconds) {\r\n      const timeInSeconds = Math.floor(timeInMilliseconds / 1000); // Convert milliseconds to seconds\r\n      return timeInSeconds;\r\n    },\r\n    restartGame() {\r\n      this.$emit(\"restartGame\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAGM,cAFJC,mBAAA,CAAsE,YAAlE,iBAAe,GAAAC,gBAAA,CAAGC,QAAA,CAAAC,kBAAkB,CAACC,MAAA,CAAAC,YAAY,KAAI,UAAQ,iBACjEL,mBAAA,CAAgD;IAAvCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,QAAA,CAAAO,WAAA,IAAAP,QAAA,CAAAO,WAAA,IAAAD,IAAA,CAAW;KAAE,YAAU,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}