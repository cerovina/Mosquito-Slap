{"ast":null,"code":"export default {\n  data() {\n    return {\n      started: false,\n      startTime: null,\n      buttonText: \"Click me!\",\n      isMosquitoButton: false\n    };\n  },\n  methods: {\n    startGame() {\n      this.started = true;\n      this.startTime = Date.now();\n      this.buttonText = \"I can hear it!\";\n      setTimeout(() => {\n        this.buttonText = \"\";\n        this.isMosquitoButton = true; // Apply the class when the button text changes\n      }, this.randomDelay());\n    },\n    endGame() {\n      if (!this.buttonText) {\n        const reactionTime = Date.now() - this.startTime;\n        this.started = false;\n        this.isMosquitoButton = false; // Remove the class when the game ends\n        this.$emit(\"gameOver\", reactionTime);\n      }\n    },\n    randomDelay() {\n      return Math.floor(Math.random() * 3) + 1; // Random delay between 1 to 3 seconds\n    }\n  }\n};","map":{"version":3,"names":["data","started","startTime","buttonText","isMosquitoButton","methods","startGame","Date","now","setTimeout","randomDelay","endGame","reactionTime","$emit","Math","floor","random"],"sources":["C:\\Users\\Nikola\\Desktop\\Vue Reaction Game\\vue-reaction-game\\src\\components\\theGame.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Catch the mosquito!</h1>\r\n    <p>Can you beat 2000ms?</p>\r\n    <button @click=\"startGame\" v-if=\"!started\">Start</button>\r\n    <button @click=\"endGame\" v-else :class=\"{ mosquitoButton: isMosquitoButton }\">{{ buttonText }}</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      started: false,\r\n      startTime: null,\r\n      buttonText: \"Click me!\",\r\n      isMosquitoButton: false,\r\n    };\r\n  },\r\n  methods: {\r\n    startGame() {\r\n      this.started = true;\r\n      this.startTime = Date.now();\r\n      this.buttonText = \"I can hear it!\";\r\n      setTimeout(() => {\r\n        this.buttonText = \"\";\r\n        this.isMosquitoButton = true; // Apply the class when the button text changes\r\n      }, this.randomDelay());\r\n    },\r\n    endGame() {\r\n      if (!this.buttonText) {\r\n        const reactionTime = Date.now() - this.startTime;\r\n        this.started = false;\r\n        this.isMosquitoButton = false; // Remove the class when the game ends\r\n        this.$emit(\"gameOver\", reactionTime);\r\n      }\r\n    },\r\n    randomDelay() {\r\n      return Math.floor(Math.random() * 3) + 1; // Random delay between 1 to 3 seconds\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.mosquitoButton {\r\n  background-image: url('@/assets/komarac.png');\r\n  background-size: cover;\r\n  width: 400px;\r\n  height: 325px;\r\n}\r\n</style>\r\n"],"mappings":"AAUA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,WAAW;MACvBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACL,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,SAAQ,GAAIK,IAAI,CAACC,GAAG,CAAC,CAAC;MAC3B,IAAI,CAACL,UAAS,GAAI,gBAAgB;MAClCM,UAAU,CAAC,MAAM;QACf,IAAI,CAACN,UAAS,GAAI,EAAE;QACpB,IAAI,CAACC,gBAAe,GAAI,IAAI,EAAE;MAChC,CAAC,EAAE,IAAI,CAACM,WAAW,CAAC,CAAC,CAAC;IACxB,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,IAAI,CAAC,IAAI,CAACR,UAAU,EAAE;QACpB,MAAMS,YAAW,GAAIL,IAAI,CAACC,GAAG,CAAC,IAAI,IAAI,CAACN,SAAS;QAChD,IAAI,CAACD,OAAM,GAAI,KAAK;QACpB,IAAI,CAACG,gBAAe,GAAI,KAAK,EAAE;QAC/B,IAAI,CAACS,KAAK,CAAC,UAAU,EAAED,YAAY,CAAC;MACtC;IACF,CAAC;IACDF,WAAWA,CAAA,EAAG;MACZ,OAAOI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAC5C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}