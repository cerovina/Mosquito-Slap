{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0151b0a3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Catch the mosquito!\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Can you beat 2000ms?\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, !$data.started ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startGame && $options.startGame(...args))\n  }, \"Start\")) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.endGame && $options.endGame(...args)),\n    class: _normalizeClass({\n      mosquitoButton: $data.isMosquitoButton\n    })\n  }, _toDisplayString($data.buttonText), 3 /* TEXT, CLASS */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$data","started","onClick","_cache","args","$options","startGame","endGame","class","_normalizeClass","mosquitoButton","isMosquitoButton","buttonText"],"sources":["C:\\Users\\Nikola\\Desktop\\Vue Reaction Game\\vue-reaction-game\\src\\components\\theGame.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Catch the mosquito!</h1>\r\n    <p>Can you beat 2000ms?</p>\r\n    <button @click=\"startGame\" v-if=\"!started\">Start</button>\r\n    <button @click=\"endGame\" v-else :class=\"{ mosquitoButton: isMosquitoButton }\">{{ buttonText }}</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      started: false,\r\n      startTime: null,\r\n      buttonText: \"Click me!\",\r\n      isMosquitoButton: false,\r\n      mosquitoAppearTime: null, // Timestamp when mosquito button appears\r\n    };\r\n  },\r\n  methods: {\r\n    startGame() {\r\n      this.started = true;\r\n      this.startTime = Date.now();\r\n      this.buttonText = \"I can hear it!\";\r\n      setTimeout(() => {\r\n        this.buttonText = \"\";\r\n        this.isMosquitoButton = true;\r\n        this.mosquitoAppearTime = Date.now(); // Record timestamp when the mosquito appears\r\n      }, this.randomDelay());\r\n    },\r\n    endGame() {\r\n      if (!this.buttonText) {\r\n        const reactionTime = this.mosquitoAppearTime - this.startTime; // Calculate reaction time\r\n        this.started = false;\r\n        this.isMosquitoButton = false;\r\n        this.$emit(\"gameOver\", reactionTime);\r\n      }\r\n    },\r\n    randomDelay() {\r\n      return Math.floor(Math.random() * 3000) + 1000; // Random delay between 1 to 4 seconds\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.mosquitoButton {\r\n  background-image: url('@/assets/komarac.png');\r\n  background-size: cover;\r\n  width: 400px;\r\n  height: 325px;\r\n}\r\n\r\np {\r\n  margin-top: 30px;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAA4B,YAAxB,qBAAmB;gEACvBA,mBAAA,CAA2B,WAAxB,sBAAoB;;;uBAFzBC,mBAAA,CAKM,cAJJC,UAA4B,EAC5BC,UAA2B,E,CACOC,KAAA,CAAAC,OAAO,I,cAAzCJ,mBAAA,CAAyD;;IAAhDK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAkB,OAAK,M,cAChDP,mBAAA,CAAuG;;IAA9FK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,OAAA,IAAAF,QAAA,CAAAE,OAAA,IAAAH,IAAA,CAAO;IAAUI,KAAK,EAAAC,eAAA;MAAAC,cAAA,EAAoBV,KAAA,CAAAW;IAAgB;sBAAOX,KAAA,CAAAY,UAAU,yB"},"metadata":{},"sourceType":"module","externalDependencies":[]}